-- Drop the database if it already exists to ensure a clean recreation
DROP DATABASE IF EXISTS lms_db;

-- Create the lms_db database
CREATE DATABASE lms_db;

-- Use the newly created database
USE lms_db;

-- Table: activity_log
CREATE TABLE activity_log (
    timestamp DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP(),
    user_id INT NULL,
    username VARCHAR(255) NULL,
    action VARCHAR(255) NULL,
    details TEXT NULL,
    ip_address VARCHAR(255) NULL
);

-- Table: exams
CREATE TABLE exams (
    id INT NOT NULL PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    student_id INT NULL,
    exam_date DATE NOT NULL,
    time_slot VARCHAR(255) NOT NULL,
    course_name VARCHAR(255) NULL,
    status ENUM('Scheduled', 'Completed', 'Cancelled') DEFAULT 'Scheduled',
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP(),
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP()
);

-- Table: exam_sessions
CREATE TABLE exam_sessions (
    id INT NOT NULL PRIMARY KEY,
    user_id INT NOT NULL,
    subject VARCHAR(255) NOT NULL,
    mock_number INT NOT NULL,
    start_time TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP(),
    end_time TIMESTAMP NULL,
    completed TINYINT DEFAULT 0,
    score INT NULL,
    reason_for_completion VARCHAR(255) NULL,
    questions_list TEXT NOT NULL,
    answers_list TEXT NULL,
    flags_list TEXT NULL
);

-- Table: fees
CREATE TABLE fees (
    id INT NOT NULL PRIMARY KEY,
    student_id INT NOT NULL,
    fee_type VARCHAR(255) NOT NULL,
    subject TEXT NULL,
    amount DECIMAL(10, 2) NOT NULL,
    original_amount DECIMAL(10, 2) NOT NULL,
    discount_applied DECIMAL(10, 2) DEFAULT 0.00,
    due_date DATE NULL,
    payment_status ENUM('Pending', 'Paid', 'Overdue', 'Waived') DEFAULT 'Pending',
    paid_date DATE NULL,
    invoice_id VARCHAR(255) UNIQUE NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP(),
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP()
);

-- Table: invoices
CREATE TABLE invoices (
    id INT NOT NULL PRIMARY KEY,
    student_id INT NOT NULL,
    invoice_number VARCHAR(255) NOT NULL UNIQUE,
    issue_date DATE NOT NULL,
    due_date DATE NULL,
    total_amount DECIMAL(10, 2) NOT NULL,
    fee_type VARCHAR(255) NULL,
    subject TEXT NULL,
    status ENUM('Pending', 'Paid', 'Cancelled') DEFAULT 'Pending',
    paid_date DATE NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP(),
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP()
);

-- Table: notices
CREATE TABLE notices (
    id INT NOT NULL PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    content TEXT NOT NULL,
    published_date DATE NOT NULL,
    status ENUM('Draft', 'Published', 'Archived') DEFAULT 'Draft',
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP(),
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP()
);

-- Table: questions_fa1
CREATE TABLE questions_fa1 (
    id INT NOT NULL PRIMARY KEY,
    question_text TEXT NOT NULL,
    option_a VARCHAR(255) NOT NULL,
    option_b VARCHAR(255) NOT NULL,
    option_c VARCHAR(255) NOT NULL,
    option_d VARCHAR(255) NOT NULL,
    correct_answer CHAR(1) NOT NULL
);

-- Table: questions_fa2
CREATE TABLE questions_fa2 (
    id INT NOT NULL PRIMARY KEY,
    question_text TEXT NOT NULL,
    option_a VARCHAR(255) NOT NULL,
    option_b VARCHAR(255) NOT NULL,
    option_c VARCHAR(255) NOT NULL,
    option_d VARCHAR(255) NOT NULL,
    correct_answer CHAR(1) NOT NULL
);

-- Table: questions_ma1
CREATE TABLE questions_ma1 (
    id INT NOT NULL PRIMARY KEY,
    question_text TEXT NOT NULL,
    option_a VARCHAR(255) NOT NULL,
    option_b VARCHAR(255) NOT NULL,
    option_c VARCHAR(255) NOT NULL,
    option_d VARCHAR(255) NOT NULL,
    correct_answer CHAR(1) NOT NULL
);

-- Table: questions_ma2
CREATE TABLE questions_ma2 (
    id INT NOT NULL PRIMARY KEY,
    question_text TEXT NOT NULL,
    option_a VARCHAR(255) NOT NULL,
    option_b VARCHAR(255) NOT NULL,
    option_c VARCHAR(255) NOT NULL,
    option_d VARCHAR(255) NOT NULL,
    correct_answer CHAR(1) NOT NULL
);

-- Table: resources
CREATE TABLE resources (
    id INT NOT NULL PRIMARY KEY,
    subject VARCHAR(255) NOT NULL,
    title VARCHAR(255) NOT NULL,
    type ENUM('Document', 'Video', 'Audio', 'Link') NOT NULL,
    description TEXT NULL,
    file_path VARCHAR(255) NOT NULL,
    file_size VARCHAR(255) NULL,
    upload_date TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP(),
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP()
);

-- Table: subjects
CREATE TABLE subjects (
    id INT NOT NULL PRIMARY KEY,
    subject_code VARCHAR(255) NOT NULL UNIQUE,
    subject_name VARCHAR(255) NOT NULL,
    level VARCHAR(255) NOT NULL
);

-- Table: users
CREATE TABLE users (
    id INT NOT NULL PRIMARY KEY,
    username VARCHAR(255) NOT NULL UNIQUE,
    email VARCHAR(255) NOT NULL UNIQUE,
    password_hash VARCHAR(255) NOT NULL,
    role ENUM('Admin', 'Teacher', 'Student', 'Parent') NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP(),
    acca_id VARCHAR(255) UNIQUE NULL,
    profile_image_path VARCHAR(255) NULL
);
